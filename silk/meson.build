
silk_lib = static_library('silk',
    'A2NLSF.c',
    'CNG.c',
    'HP_variable_cutoff.c',
    'LPC_analysis_filter.c',
    'LPC_fit.c',
    'LPC_inv_pred_gain.c',
    'LP_variable_cutoff.c',
    'NLSF2A.c',
    'NLSF_VQ.c',
    'NLSF_VQ_weights_laroia.c',
    'NLSF_decode.c',
    'NLSF_del_dec_quant.c',
    'NLSF_encode.c',
    'NLSF_stabilize.c',
    'NLSF_unpack.c',
    'NSQ.c',
    'NSQ_del_dec.c',
    'PLC.c',
    'VAD.c',
    'VQ_WMat_EC.c',
    'ana_filt_bank_1.c',
    'biquad_alt.c',
    'bwexpander.c',
    'bwexpander_32.c',
    'check_control_input.c',
    'code_signs.c',
    'control_SNR.c',
    'control_audio_bandwidth.c',
    'control_codec.c',
    'debug.c',
    'dec_API.c',
    'decode_core.c',
    'decode_frame.c',
    'decode_indices.c',
    'decode_parameters.c',
    'decode_pitch.c',
    'decode_pulses.c',
    'decoder_set_fs.c',
    'enc_API.c',
    'encode_indices.c',
    'encode_pulses.c',
    'gain_quant.c',
    'init_decoder.c',
    'init_encoder.c',
    'inner_prod_aligned.c',
    'interpolate.c',
    'lin2log.c',
    'log2lin.c',
    'pitch_est_tables.c',
    'process_NLSFs.c',
    'quant_LTP_gains.c',
    'resampler.c',
    'resampler_down2.c',
    'resampler_down2_3.c',
    'resampler_private_AR2.c',
    'resampler_private_IIR_FIR.c',
    'resampler_private_down_FIR.c',
    'resampler_private_up2_HQ.c',
    'resampler_rom.c',
    'shell_coder.c',
    'sigm_Q15.c',
    'sort.c',
    'stereo_LR_to_MS.c',
    'stereo_MS_to_LR.c',
    'stereo_decode_pred.c',
    'stereo_encode_pred.c',
    'stereo_find_predictor.c',
    'stereo_quant_pred.c',
    'sum_sqr_shift.c',
    'table_LSF_cos.c',
    'tables_LTP.c',
    'tables_NLSF_CB_NB_MB.c',
    'tables_NLSF_CB_WB.c',
    'tables_gain.c',
    'tables_other.c',
    'tables_pitch_lag.c',
    'tables_pulses_per_block.c',

    c_args : opus_cflags,
    build_by_default : false,
    include_directories : opus_incdirs_private,
)

silk_float_lib = static_library('silk_float',
    'float/LPC_analysis_filter_FLP.c',
    'float/LPC_inv_pred_gain_FLP.c',
    'float/LTP_analysis_filter_FLP.c',
    'float/LTP_scale_ctrl_FLP.c',
    'float/apply_sine_window_FLP.c',
    'float/autocorrelation_FLP.c',
    'float/burg_modified_FLP.c',
    'float/bwexpander_FLP.c',
    'float/corrMatrix_FLP.c',
    'float/encode_frame_FLP.c',
    'float/energy_FLP.c',
    'float/find_LPC_FLP.c',
    'float/find_LTP_FLP.c',
    'float/find_pitch_lags_FLP.c',
    'float/find_pred_coefs_FLP.c',
    'float/inner_product_FLP.c',
    'float/k2a_FLP.c',
    'float/noise_shape_analysis_FLP.c',
    'float/pitch_analysis_core_FLP.c',
    'float/process_gains_FLP.c',
    'float/regularize_correlations_FLP.c',
    'float/residual_energy_FLP.c',
    'float/scale_copy_vector_FLP.c',
    'float/scale_vector_FLP.c',
    'float/schur_FLP.c',
    'float/sort_FLP.c',
    'float/warped_autocorrelation_FLP.c',
    'float/wrappers_FLP.c',

    c_args : opus_cflags,
    build_by_default : false,
    include_directories : opus_incdirs_private,
)

silk_sse4_1_lib = static_library('silk_sse4_1',
    'x86/NSQ_del_dec_sse4_1.c',
    'x86/NSQ_sse4_1.c',
    'x86/VAD_sse4_1.c',
    'x86/VQ_WMat_EC_sse4_1.c',
    'x86/x86_silk_map.c',

    c_args : [opus_cflags, sse4_1_flags],
    build_by_default : false,
    include_directories : opus_incdirs_private,
)

silk_neon_lib = static_library('silk_neon',
    'arm/LPC_inv_pred_gain_neon_intr.c',
    'arm/NSQ_del_dec_neon_intr.c',
    'arm/NSQ_neon.c',
    'arm/arm_silk_map.c',
    'arm/biquad_alt_neon_intr.c',

    c_args : [opus_cflags, neon_flags],
    build_by_default : false,
    include_directories : opus_incdirs_private,
)

silk_libs = [silk_lib, silk_float_lib]

if have_sse4_1
    silk_libs += silk_sse4_1_lib
endif

if have_neon
    silk_libs += silk_neon_lib
endif

silk_dep = declare_dependency(
    link_with : silk_libs
)
